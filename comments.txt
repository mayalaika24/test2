 {
   "icon": "<svg width=\"16\" height=\"17\" viewBox=\"0 0 16 17\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M15 14.5C15 14.5 16 14.5 16 13.5C16 12.5 15 9.5 11 9.5C7 9.5 6 12.5 6 13.5C6 14.5 7 14.5 7 14.5H15ZM7.02235 13.5C7.01888 13.4996 7.01403 13.499 7.00815 13.498C7.00538 13.4975 7.00266 13.497 7.00001 13.4965C7.00146 13.2325 7.16687 12.4669 7.75926 11.7758C8.31334 11.1294 9.28269 10.5 11 10.5C12.7173 10.5 13.6867 11.1294 14.2407 11.7758C14.8331 12.4669 14.9985 13.2325 15 13.4965C14.9973 13.497 14.9946 13.4975 14.9919 13.498C14.986 13.499 14.9811 13.4996 14.9777 13.5H7.02235Z\" fill=\"#696969\"/><path d=\"M11 7.5C12.1046 7.5 13 6.60457 13 5.5C13 4.39543 12.1046 3.5 11 3.5C9.89543 3.5 9 4.39543 9 5.5C9 6.60457 9.89543 7.5 11 7.5ZM14 5.5C14 7.15685 12.6569 8.5 11 8.5C9.34315 8.5 8 7.15685 8 5.5C8 3.84315 9.34315 2.5 11 2.5C12.6569 2.5 14 3.84315 14 5.5Z\" fill=\"#696969\"/><path d=\"M6.93593 9.77996C6.56813 9.66232 6.15954 9.57679 5.70628 9.53306C5.48195 9.51141 5.24668 9.5 5 9.5C1 9.5 0 12.5 0 13.5C0 14.1667 0.333333 14.5 1 14.5H5.21636C5.07556 14.2159 5 13.8791 5 13.5C5 12.4897 5.37724 11.458 6.08982 10.5962C6.33327 10.3017 6.61587 10.0271 6.93593 9.77996ZM4.92004 10.5005C4.32256 11.4136 4 12.4547 4 13.5H1C1 13.2393 1.16424 12.47 1.75926 11.7758C2.30468 11.1395 3.25249 10.5197 4.92004 10.5005Z\" fill=\"#696969\"/><path d=\"M1.5 6C1.5 4.34315 2.84315 3 4.5 3C6.15685 3 7.5 4.34315 7.5 6C7.5 7.65685 6.15685 9 4.5 9C2.84315 9 1.5 7.65685 1.5 6ZM4.5 4C3.39543 4 2.5 4.89543 2.5 6C2.5 7.10457 3.39543 8 4.5 8C5.60457 8 6.5 7.10457 6.5 6C6.5 4.89543 5.60457 4 4.5 4Z\" fill=\"#696969\"/></svg>",
   "path": "/users",
   "title": "user_employee",
   "children": [
     {
       "path": "/users",
       "title": "admins"
     },
     {
       "path": "/users/employees",
       "title": "employees"
     },
     {
       "path": "/users/roles-permissions",
       "title": "roles_permissions"
     }
   ]
 },


 <Select
  loading={isFetching || isFetchingNextPage}
  onSelect={(val) => console.log(val)}
  label="status"
  hasNextPage={hasNextPage}
  fetchNextPage={fetchNextPage}
  options={extractItems(data?.pages).map((item) => ({
    id: item.id,
    name: item.name_en,
  }))}
  onSearch={(val) => handleSearchQuery(val)}
  paginate
/>
const {searchQuery, handleSearchQuery} = useSearchQuery();
const { data, isFetching, isFetchingNextPage, hasNextPage, fetchNextPage } =
  useGovernorateInfinite(searchQuery);